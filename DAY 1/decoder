module decoder(input [2:0] i,input en ,output [7:0] y);
  
  assign y = en ? 1<< i:0;
endmodule


module decoder(input [2:0] i,output [7:0] y);
  
  assign y[0] = ~i[2] & ~i[1] & ~i[0];
  assign y[1] = ~i[2] & ~i[1] & i[0];
  assign y[2] = ~i[2] & i[1] & ~i[0];
  assign y[3] = ~i[2] & i[1] & i[0];
  assign y[4] = i[2] & ~i[1] & ~i[0];
  assign y[5] = i[2] & ~i[1] & i[0];
  assign y[6] = i[2] & i[1] & ~i[0];
  assign y[7] = i[2] & i[1] & i[0];
endmodule


  module tb;
  reg [2:0] i;
  reg en;
  wire [7:0] y;
  
  decoder dut (.i(i),.en(en),.y(y));
  
  initial begin
    
    $monitor ("en =%0b i =%0b y = %0b ", en ,i, y);
    
    en = 1 ;
    #1 
    i = 3'b000; #1;
    i = 3'b001; #1;
    i = 3'b010; #1;
    i = 3'b011; #1;
    i = 3'b100; #1;
    i = 3'b101; #1;
    i = 3'b110; #1;
    i = 3'b111; #1;
    
    en =0 ;
    
  end
  
  
    
endmodule
